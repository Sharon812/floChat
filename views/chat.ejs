<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EvaraStore</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        height: 100vh;
        display: grid;
        grid-template-columns: 200px 1fr;
        grid-template-rows: auto 1fr auto;
        grid-template-areas:
          "header header"
          "sidebar main"
          "sidebar form";
      }
      header {
        grid-area: header;
        background-color: #333;
        color: white;
        padding: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .sidebar {
        grid-area: sidebar;
        background-color: #f4f4f4;
        padding: 10px;
        border-right: 1px solid #ddd;
        overflow-y: auto;
      }
      .chat-container {
        grid-area: main;
        padding: 10px;
        overflow-y: auto;
        display: flex;
        flex-direction: column;
      }
      .chat-form {
        grid-area: form;
        padding: 10px;
        background-color: #f4f4f4;
        border-top: 1px solid #ddd;
        display: flex;
      }
      #message-input {
        flex-grow: 1;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-right: 10px;
      }
      button {
        padding: 10px 20px;
        background-color: #4caf50;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      button:hover {
        background-color: #45a049;
      }
      .message {
        margin-bottom: 10px;
        padding: 10px;
        border-radius: 5px;
        max-width: 70%;
      }
      .message-content {
        background-color: #e3e3e3;
        padding: 10px;
        border-radius: 5px;
      }
      .message.own {
        align-self: flex-end;
      }
      .message.own .message-content {
        background-color: #4caf50;
        color: white;
      }
      .username {
        font-weight: bold;
        margin-bottom: 5px;
      }
      .time {
        font-size: 0.8em;
        color: #888;
        text-align: right;
      }
      .user-list {
        list-style-type: none;
        padding: 0;
      }
      .user-list li {
        padding: 5px;
        border-bottom: 1px solid #ddd;
      }
      .logout {
        background-color: #f44336;
      }
      .logout:hover {
        background-color: #d32f2f;
      }

      /* Responsive styles */
      @media screen and (max-width: 768px) {
        body {
          grid-template-columns: 1fr;
          grid-template-rows: auto auto 1fr auto;
          grid-template-areas:
            "header"
            "sidebar"
            "main"
            "form";
        }

        header {
          flex-direction: column;
          align-items: flex-start;
        }

        header div {
          width: 100%;
          margin-top: 10px;
          display: flex;
          justify-content: space-between;
          align-items: center;
        }

        .sidebar {
          border-right: none;
          border-bottom: 1px solid #ddd;
          max-height: 150px;
        }

        .message {
          max-width: 85%;
        }
      }

      @media screen and (max-width: 480px) {
        .chat-form {
          flex-direction: column;
        }

        #message-input {
          margin-right: 0;
          margin-bottom: 10px;
          width: 100%;
          box-sizing: border-box;
        }

        button {
          width: 100%;
        }

        .message {
          max-width: 95%;
        }

        header h2 {
          font-size: 1.5em;
          margin: 5px 0;
        }
      }
    </style>
  </head>

  <body>
    <header>
      <h2>❤️</h2>

      <div>
        <span>Welcome, <%= username %></span>
        <a href="/logout"><button class="logout">Logout</button></a>
      </div>
    </header>
    <div class="sidebar">
      <h3>Online Users</h3>

      <ul class="user-list" id="user-list"></ul>
    </div>

    <div class="chat-container" id="chat-container"></div>

    <div class="chat-form">
      <input type="text" id="message-input" placeholder="Type a message..." />
      <button id="send-button">Send</button>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>

      document.addEventListener("DOMContentLoaded", () => {
        // all your socket and DOM code here


              // rest of your socket code here
         const socket = io()

        const username = <%- JSON.stringify(username || "Guest") %>;
        const chatContainer = document.getElementById("chat-container");
        const messageInput = document.getElementById("message-input");
        const sendButton = document.getElementById("send-button");
        const userList = document.getElementById("user-list");
        console.log(socket.connected);

        // Send message
        function sendMessage() {
          console.log("Send button clicked");

          const msg = messageInput.value.trim();

          if (msg) {
            socket.emit("chatMessage", msg);
            messageInput.value = "";
            messageInput.focus();
          }
        }

        // Send message on button click
        sendButton.addEventListener("click", sendMessage);

        // Send message on Enter key
        messageInput.addEventListener("keydown", (e) => {
          if (e.key === "Enter") {
            sendMessage();
          }
        });

        // Receive messages
        socket.on("message", (message) => {
          const isOwnMessage = message.username === username;

          const messageElement = document.createElement("div");
          messageElement.classList.add("message");
          if (isOwnMessage) {
            messageElement.classList.add("own");
          }

          const messageContent = document.createElement("div");
          messageContent.classList.add("message-content");

          if (message.username === "System") {
            messageContent.innerHTML = `<div class="text">${message.text}</div>
                                         <div class="time">${message.time}</div>`;
          } else {
            messageContent.innerHTML = `<div class="username">${
              isOwnMessage ? "You" : message.username
            }</div>
                                        <div class="text">${message.text}</div>
                                        <div class="time">${
                                          message.time
                                        }</div>`;
          }

          messageElement.appendChild(messageContent);
          chatContainer.appendChild(messageElement);

          // Scroll to bottom
          chatContainer.scrollTop = chatContainer.scrollHeight;
        });

        // Update users list
        socket.on("userList", (users) => {
          userList.innerHTML = "";
          users.forEach((user) => {
            const li = document.createElement("li");
            li.textContent = user === username ? `${user} (You)` : user;
            userList.appendChild(li);
          });
        });

        // Error handling
        socket.on("connect_error", (error) => {
          if (error.message === "Unauthorized") {
            console.log(error)
          }
        });
      });
    </script>
  </body>
</html>
